name: fasthub
services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: fasthub-php
    env_file:
      - .env
      - .env.secrets
    volumes:
      - ./:/var/www/html
      - composer-cache:/tmp/composer
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: fasthub-nginx
    ports:
      - "${APP_PORT:-8080}:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php
    networks:
      - app

  postgres:
    image: postgres:15-alpine
    container_name: fasthub-postgres
    env_file:
      - .env
      - .env.secrets
    environment:
      POSTGRES_DB: ${DB_DATABASE:-app}
      POSTGRES_USER: ${DB_USERNAME:-app}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      TZ: ${TZ:-UTC}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app

  redis:
    image: redis:7-alpine
    container_name: fasthub-redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app

volumes:
  db-data:
  redis-data:
  composer-cache:

networks:
  app:
    driver: bridge

